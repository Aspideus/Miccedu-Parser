<UserControl x:Class="miccedux.ChangesPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:miccedux"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             >

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>

        <Rectangle Grid.RowSpan="2" Fill="#333"/>
        <Button x:Name="ToReturn" Grid.Row="1" Content="Сохранить" Click="Button_Click" Margin="60, 10, 60, 10" FontSize="14"/>
        
        <TabControl x:Name="tab_control" Margin="6,6,10,10" Grid.Row="0" SelectionChanged="TabControl_SelectionChanged">
            <TabItem x:Name="item_organizations" Header="Образовательные организации" Width="240" Height="40" FontSize="14">
                <DataGrid x:Name="organizations_data" Margin="12" AutoGenerateColumns="False" SelectionMode="Single"
                          RowDetailsVisibilityMode="VisibleWhenSelected" CanUserDeleteRows="False"  >
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="organizations_id" Binding="{Binding id, IsAsync=True}" IsReadOnly="True"  Header="ID" CanUserSort="False" CanUserReorder="False" FontSize="14"/>

                        <DataGridTemplateColumn x:Name="organizations_use" CanUserSort="False" CanUserReorder="False" Header="Использовать" Width="150">
                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate >
                                    <CheckBox x:Name="SelectOrganization" IsChecked="{Binding check, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="CheckBox_Using" FontSize="14"></CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn x:Name="organizations_name" Binding="{Binding title, IsAsync=True}" EditingElementStyle="{StaticResource {x:Type TextBox}}" Header="Название" Width="*" CanUserSort="False" CanUserReorder="False" FontSize="14">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem x:Name="item_indicators" Header="Показатели" Width="100" Height="40" FontSize="14">
                <Grid>
                    <DataGrid x:Name="indicators_data" Margin="12" AutoGenerateColumns="False" CanUserDeleteRows="False"
                          RowDetailsVisibilityMode="VisibleWhenSelected" SelectionMode="Single" ItemsSource="{Binding ., IsAsync=True}"  >
                        <DataGrid.Columns>

                            <DataGridTextColumn  x:Name="indicators__id" IsReadOnly="True" Binding="{Binding id, IsAsync=True}" Header="ID" CanUserSort="False" CanUserReorder="False" FontSize="14"/>
                            <DataGridTemplateColumn x:Name="indicators_use" CanUserSort="False" CanUserReorder="False" Header="Использовать">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate >
                                        <CheckBox x:Name="SelectIndicator" HorizontalAlignment="Center" IsChecked="{Binding check, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="CheckBox_Using" FontSize="14"></CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn x:Name="indicators_combo" CanUserSort="False" CanUserReorder="False" Header="Критерий" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox x:Name="SelectIndicator" Background="{StaticResource ComboBackground}" SelectedIndex="{Binding criterion_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Initialized="SelectIndicator_Initialized" DropDownOpened="SelectIndicator_DropDownOpened" FontSize="14"></ComboBox>
                                        
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn x:Name="indicators__number" Binding="{Binding number, IsAsync=True}" EditingElementStyle="{StaticResource {x:Type TextBox}}" Header="Номер" CanUserSort="False" CanUserReorder="False" FontSize="14"/>
                            <DataGridTextColumn x:Name="indicators__name" Binding="{Binding title, IsAsync=True}" EditingElementStyle="{StaticResource {x:Type TextBox}}" Header="Название" Width="*" CanUserSort="False" CanUserReorder="False" FontSize="14">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Критерии" Width="100" Height="40" FontSize="14">
                <Grid x:Name="criteries_grid">
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75*"/>
                        <ColumnDefinition Width="25*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid x:Name="criteries_data" Grid.Row="0" Grid.ColumnSpan="2" DockPanel.Dock="Top" Margin="12" CanUserAddRows="True"  AutoGenerateColumns="False"
                          RowDetailsVisibilityMode="VisibleWhenSelected" CanUserDeleteRows="True" EnableColumnVirtualization="False" EnableRowVirtualization="False"  >

                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="criteries__name"  EditingElementStyle="{StaticResource {x:Type TextBox}}"  Binding="{Binding criterion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Header="Название" Width="*" CanUserSort="False" CanUserReorder="False" HeaderStringFormat="" FontSize="14"/>
                        </DataGrid.Columns>

                    </DataGrid>
                    <TextBox x:Name="new_row" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Bottom" Margin="12" KeyUp="TextBox_NewCriterion_KeyUp"/>
                    <Button x:Name="AddNewCriterion"  Grid.Column="1" Grid.Row="1" Content="Добавить критерий" Padding="7" Margin="12" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" MaxWidth="150" MinHeight="30" Click="Button_Click"/>
                </Grid>
            </TabItem>
        </TabControl>

        <Grid.Resources>
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="42"/>
                <Setter Property="FontFamily" Value="./#Beyond Wonderland"/>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                            <GradientStop Color="#FF97E9E9" Offset="1"/>
                            <GradientStop Color="#FF2CC8C8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>
    </Grid>
</UserControl>
